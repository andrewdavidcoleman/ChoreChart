{"version":3,"sources":["context/createDataContext.js","context/ChoreContext.js","components/CheckCircle.js","components/ChoreListItem.js","pages/ChoreList.js","components/ChoreForm.js","pages/AddChore.js","pages/ChoreDetail.js","pages/EditChore.js","components/Dashboard.js","components/ParentToggle.js","App.js","index.js"],"names":["reducer","actions","initialState","Context","React","createContext","Provider","children","useReducer","state","dispatch","boundActions","key","value","createDataContext","action","type","isParentMode","amountSaved","chores","id","Math","floor","random","name","payload","instructions","days","status","map","chore","Object","assign","filter","parseInt","choreId","day","addChore","callback","editChore","deleteChore","increaseAmountSaved","amount","decreaseAmountSaved","setCheckCircleStatus","setParentMode","CheckCircle","useContext","className","onClick","class","ChoreListItem","to","i","ChoreList","toString","ChoreForm","onSubmit","initialValues","useState","setName","setInstructions","setValue","e","preventDefault","htmlFor","onChange","target","defaultProps","AddChore","history","useHistory","push","ChoreDetail","useParams","find","EditChore","Dashboard","ParentToggle","defaultChecked","icons","checked","path","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.5411fd0f.chunk.js","sourcesContent":["import React, { useReducer } from 'react';\n\nexport default (reducer, actions, initialState) => {\n  const Context = React.createContext();\n\n  const Provider = ({ children }) => {\n    const [state, dispatch] = useReducer(reducer, initialState);\n    const boundActions = {};\n    \n    for (let key in actions) {\n      boundActions[key] = actions[key](dispatch);\n    }\n\n    return (\n      <Context.Provider value={{ state, ...boundActions }}>\n        {children}\n      </Context.Provider>\n    );\n  };\n\n  return { Context, Provider };\n};\n","import createDataContext from './createDataContext';\n\nconst choreReducer = (state, action) => {\n  switch (action.type) {\n    case 'addChore':\n      return {\n        isParentMode: state.isParentMode,\n        amountSaved: state.amountSaved,\n        chores: [\n          ...state.chores, \n          { \n            id: Math.floor(Math.random() * 99999),\n            name: action.payload.name,\n            instructions: action.payload.instructions,\n            value: action.payload.value,\n            days: [\n              { name: 'monday', status: 'unchecked'},\n              { name: 'tuesday', status: 'unchecked'},\n              { name: 'wednesday', status: 'unchecked'},\n              { name: 'thursday', status: 'unchecked'},\n              { name: 'friday', status: 'unchecked'},\n              { name: 'saturday', status: 'unchecked'},\n              { name: 'sunday', status: 'unchecked'},\n            ]\n          }\n        ]\n      };\n    case 'editChore':\n      return {\n        isParentMode: state.isParentMode,\n        amountSaved: state.amountSaved,\n        chores: state.chores.map(chore => {\n          return chore.id == action.payload.id ? Object.assign(chore, action.payload) : chore\n        })\n      }\n    case 'deleteChore':\n      return {\n        isParentMode: state.isParentMode,\n        amountSaved: state.amountSaved,\n        chores: state.chores.filter((chore) => chore.id !== action.payload)\n      }\n    case 'increaseAmountSaved':\n      return {\n        isParentMode: state.isParentMode,\n        amountSaved: state.amountSaved + parseInt(action.payload),\n        chores: state.chores\n      }\n    case 'decreaseAmountSaved':\n      return {\n        isParentMode: state.isParentMode,\n        amountSaved: state.amountSaved - parseInt(action.payload),\n        chores: state.chores\n      }\n    case 'setCheckCircleStatus':\n      return {\n        isParentMode: state.isParentMode,\n        amountSaved: state.amountSaved,\n        chores: state.chores.map(chore => {\n          return chore.id == action.payload.choreId \n          ? Object.assign(chore, {\n            days: chore.days.map(day => {\n              return day.name === action.payload.day ? { name: action.payload.day, status: action.payload.status } : day\n            })\n          }) \n          : chore\n        })\n      }\n    case 'setParentMode':\n      return {\n        isParentMode: action.payload.isParentMode,\n        amountSaved: state.amountSaved,\n        chores: state.chores\n      }\n    default:\n      return state;\n  }\n}\n\nconst addChore = dispatch => {\n  return (name, instructions, value, callback) => {\n    dispatch({ type: 'addChore', payload: { name, instructions, value } })\n    callback()\n  };\n}\n\nconst editChore = dispatch => {\n  return (id, name, instructions, value, callback) => {\n    dispatch({ type: 'editChore', payload: { id, name, instructions, value } })\n    callback()\n  };\n}\n\nconst deleteChore = dispatch => {\n  return (id) => {\n    dispatch({ type: 'deleteChore', payload: id })\n  }\n}\n\nconst increaseAmountSaved = dispatch => {\n  return (amount) => {\n    dispatch({ type: 'increaseAmountSaved', payload: amount })\n  }\n}\n\nconst decreaseAmountSaved = dispatch => {\n  return (amount) => {\n    dispatch({ type: 'decreaseAmountSaved', payload: amount })\n  }\n}\n\nconst setCheckCircleStatus = dispatch => {\n  return (choreId, day, status) => {\n    dispatch({ type: 'setCheckCircleStatus', payload: { choreId, day, status } })\n  }\n}\n\nconst setParentMode = dispatch => {\n  return (isParentMode) => {\n    dispatch({ type: 'setParentMode', payload: { isParentMode } })\n  }\n}\n\nexport const { Context, Provider } = createDataContext(\n  choreReducer,\n  { addChore, editChore, deleteChore, increaseAmountSaved, decreaseAmountSaved, setCheckCircleStatus, setParentMode },\n  {\n    isParentMode: true,\n    amountSaved: 0,\n    chores: [\n      { \n        name: 'Take out trash', \n        instructions: 'Trash in the green can, recycling in blue. Replace the trash bag. Bags under the sink.', \n        value: 1, \n        id: 1,\n        days: [\n          { name: 'monday', status: 'unchecked'},\n          { name: 'tuesday', status: 'unchecked'},\n          { name: 'wednesday', status: 'unchecked'},\n          { name: 'thursday', status: 'unchecked'},\n          { name: 'friday', status: 'unchecked'},\n          { name: 'saturday', status: 'unchecked'},\n          { name: 'sunday', status: 'unchecked'},\n        ]\n      },\n      { \n        name: 'Unload dishwasher', \n        instructions: 'When dishes are clean, put back in cabinets.', \n        value: 2, \n        id: 2,\n        days: [\n          { name: 'monday', status: 'unchecked'},\n          { name: 'tuesday', status: 'unchecked'},\n          { name: 'wednesday', status: 'unchecked'},\n          { name: 'thursday', status: 'unchecked'},\n          { name: 'friday', status: 'unchecked'},\n          { name: 'saturday', status: 'unchecked'},\n          { name: 'sunday', status: 'unchecked'},\n        ]\n      },\n      { \n        name: 'Clean room', \n        instructions: 'Make bed. Put dirty clothes in basket. Pick up toys.', \n        value: 3, \n        id: 3,\n        days: [\n          { name: 'monday', status: 'unchecked'},\n          { name: 'tuesday', status: 'unchecked'},\n          { name: 'wednesday', status: 'unchecked'},\n          { name: 'thursday', status: 'unchecked'},\n          { name: 'friday', status: 'unchecked'},\n          { name: 'saturday', status: 'unchecked'},\n          { name: 'sunday', status: 'unchecked'},\n        ]\n      }\n    ]\n  }\n)\n","import React, { useState, useContext } from 'react'\nimport { Context } from '../context/ChoreContext'\n\nconst CheckCircle = ({ chore, day }) => {\n    const { increaseAmountSaved, decreaseAmountSaved, setCheckCircleStatus } = useContext(Context)\n\n    const handleClick = () => {\n        if (day.status === 'unchecked') {\n            setCheckCircleStatus(chore.id, day.name, 'checked')\n            increaseAmountSaved(chore.value)\n        } else {\n            setCheckCircleStatus(chore.id, day.name, 'unchecked')\n            decreaseAmountSaved(chore.value)\n        }\n    }\n\n    return (\n        <div className=\"day\">\n            <span className=\"circle\" onClick={handleClick}>\n                {day.status === 'checked' \n                ? <i className=\"fas fa-check\"></i> \n                : day.status === 'pending' \n                ? <i class=\"far fa-eye\"></i> \n                : ''}\n            </span>\n        </div>\n    )\n}\n\nexport default CheckCircle","import React, { useContext } from 'react'\nimport { Context } from '../context/ChoreContext'\nimport CheckCircle from '../components/CheckCircle'\nimport { Link } from \"react-router-dom\"\n\nconst ChoreListItem = ({ chore }) => {\n    const { state, deleteChore } = useContext(Context);\n\n    return (\n        <li className=\"chore\">\n            <div className=\"chore-description\">\n                {state.isParentMode ? \n                    <div>\n                        <Link to={`/EditChore/${chore.id}`}>\n                            <i className=\"fas fa-pencil-alt\"></i>\n                        </Link>\n                    </div>\n                : ''}\n                <div>\n                    <div>\n                        <Link to={`/ChoreDetail/${chore.id}`}>\n                            {chore.name}\n                        </Link>\n                    </div>\n                    <div>\n                        ${chore.value}\n                    </div>\n                </div>\n            </div>\n            {chore.days.map((day, i) =>  <CheckCircle chore={chore} day={day} key={i} />)}\n            <div className=\"day\">\n                {state.isParentMode ? \n                        <i className=\"fas fa-times\" onClick={() => deleteChore(chore.id)}></i>\n                : ''}\n            </div> \n        </li>    \n    )\n}\n\nexport default ChoreListItem","import React, { useContext } from 'react'\nimport { Context } from '../context/ChoreContext'\nimport ChoreListItem from '../components/ChoreListItem'\nimport { Link } from \"react-router-dom\"\n\nconst ChoreList = () => {\n    const { state, addChore } = useContext(Context)\n    const chores = state.chores.map((chore) =>\n        <ChoreListItem chore={chore} key={chore.id.toString()}/>\n    );\n\n    return (\n        <ul>\n            <li className=\"border-bottom\">\n                <div className=\"chore-description\">Chore</div>\n                <div className=\"day\">Sunday</div>\n                <div className=\"day\">Monday</div>\n                <div className=\"day\">Tuesday</div>\n                <div className=\"day\">Wednesday</div>\n                <div className=\"day\">Thursday</div>\n                <div className=\"day\">Friday</div>\n                <div className=\"day\">Saturday</div>\n                <div className=\"day\"></div>\n            </li>\n            {chores}\n            <li>\n                {state.isParentMode ?\n                    <Link to=\"ChoreChart/AddChore\">\n                        <i className=\"fas fa-plus\"></i>\n                    </Link>\n                    :\n                    ''\n                }\n            </li>\n        </ul>\n    )\n}\n\nexport default ChoreList","import React, { useState } from 'react'\nimport { Link } from 'react-router-dom'\n\nconst ChoreForm = ({ onSubmit, initialValues }) => {\n    const [id, setId] = useState(initialValues.id)\n    const [name, setName] = useState(initialValues.name)\n    const [instructions, setInstructions] = useState(initialValues.instructions)\n    const [value, setValue] = useState(initialValues.value)\n\n    return (\n        <form onSubmit={(e) => {\n            e.preventDefault()\n            onSubmit(id, name, instructions, value)\n        }}>\n            <Link to=\"/\">\n                <i className=\"fas fa-chevron-left\"></i>\n            </Link>\n            <label htmlFor=\"name\">Name:</label>\n            <input type=\"text\" name=\"chorename\" value={name} onChange={(e) => setName(e.target.value)}/>\n\n            <label htmlFor=\"instructions\">Instructions:</label>\n            <textarea name=\"choreinstructions\" value={instructions} onChange={(e) => setInstructions(e.target.value)}/>\n\n            <label htmlFor=\"value\">Value:</label>\n            <input type=\"text\" name=\"chorevalue\" value={value} onChange={(e) => setValue(e.target.value)}/>\n\n            <input type=\"submit\" value=\"Save\"/>\n        </form>\n    )\n}\n\nChoreForm.defaultProps = {\n    initialValues: {\n        id: 0,\n        name: '',\n        instructions: '',\n        value: 0\n    }\n}\n\n\nexport default ChoreForm","import React, { useContext } from 'react'\nimport ChoreForm from '../components/ChoreForm'\nimport { Context } from '../context/ChoreContext'\nimport { useHistory } from \"react-router-dom\"\n\nconst AddChore = () => {\n    const { addChore } = useContext(Context)\n    const history = useHistory();\n\n    return <ChoreForm onSubmit={(id, name, instructions, value) => {\n        addChore(name, instructions, value, () => history.push('/ChoreChart'))\n    }}/>\n}\n\nexport default AddChore","import React, { useContext } from 'react'\nimport { Link } from 'react-router-dom'\nimport { useParams } from \"react-router-dom\"\nimport { Context } from '../context/ChoreContext'\n\nconst ChoreDetail = () => {\n    const { id } = useParams()\n    const { state, editChore } = useContext(Context)\n    const chore = state.chores.find(chore => chore.id == id)\n\n    return (\n        <>\n            <Link to=\"/ChoreChart\">\n                <i className=\"fas fa-chevron-left\"></i>\n            </Link>\n            <div>\n                {chore.name}:\n            </div>\n            <div>\n                {chore.instructions}\n            </div>\n            <div>\n                ${chore.value}\n            </div>\n        </>\n    )\n}\n\nexport default ChoreDetail","import React, { useContext } from 'react'\nimport { Context } from '../context/ChoreContext'\nimport ChoreForm from '../components/ChoreForm'\nimport { useHistory, useParams } from \"react-router-dom\"\n\nconst EditChore = () => {\n    const history = useHistory()\n    const { id } = useParams()\n    const { state, editChore } = useContext(Context)\n    const chore = state.chores.find(chore => chore.id == id)\n    \n    return <ChoreForm\n        initialValues={{ id, name: chore.name, instructions: chore.instructions, value: chore.value}}\n        onSubmit={(id, name, instructions, value) => {\n            editChore(id, name, instructions, value, () => history.push('/ChoreChart'))\n        }}\n    />\n}\n\nexport default EditChore","import React, { useContext } from 'react'\nimport { Context } from '../context/ChoreContext'\n\nconst Dashboard = () => {\n    const { state } = useContext(Context)\n\n    return (\n        <aside>\n          <div>Amount saved: ${state.amountSaved}</div>\n        </aside>\n    )\n}\n\nexport default Dashboard","import React, { useContext } from 'react'\nimport { Context } from '../context/ChoreContext'\nimport Toggle from 'react-toggle'\n\nconst ParentToggle = () => {\n    const { state, setParentMode } = useContext(Context)\n\n    return (<label>\n        <span>Child</span>\n        <Toggle\n          defaultChecked={state.isParentMode}\n          icons={false}\n          onChange={(e) => setParentMode(e.target.checked)} \n        />\n        <span>Parent</span>\n      </label>\n    )\n}\n\nexport default ParentToggle","import React, { useContext } from 'react'\nimport { Provider } from './context/ChoreContext'\nimport './App.scss'\nimport {\n  BrowserRouter as Router,\n  Switch,\n  Route,\n  Link\n} from \"react-router-dom\"\nimport ChoreList from './pages/ChoreList'\nimport AddChore from './pages/AddChore'\nimport ChoreDetail from './pages/ChoreDetail'\nimport EditChore from './pages/EditChore'\nimport Dashboard from './components/Dashboard'\nimport ParentToggle from './components/ParentToggle'\n\nexport default () => {\n  const parent = true;\n\n  return (\n    <Provider>\n      <header>\n        <h1>Chore Chart</h1>\n        <ParentToggle />\n        <h6>\n          [USER NAME]\n          <i className=\"fa fas fa-user\"></i>\n        </h6>\n      </header>\n      <main>\n      <Router>\n        <div>\n          <Switch>\n            <Route path=\"/ChoreChart/addChore\">\n              <AddChore />\n            </Route>\n            <Route path=\"/ChoreChart/editChore/:id\">\n              <EditChore />\n            </Route>\n            <Route path=\"/ChoreChart/choreDetail/:id\">\n              <ChoreDetail />\n            </Route>\n            <Route path=\"/ChoreChart\">\n              <ChoreList />\n            </Route>\n          </Switch>\n        </div>\n      </Router>\n      </main>\n      <Dashboard />\n    </Provider>\n  );\n};\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}